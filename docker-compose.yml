version: '3'
services:
    db:
        image: postgres:10
        environment:
            #環境変数の設定
            #直書き非推奨なので、ホストの.envから取得
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_DB=${DB_NAME}
        ports:
            - "5432:5432"
        volumes:
            # db_parkinghubという名前をつけたボリュームをコンテナの/var/lib/postgresql/data にマウントするという意味
            - db_parkinghub:/var/lib/postgresql/data
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
          interval: 10s
          timeout: 5s
          retries: 5
            
    api:
        build:
          context: ./api
          dockerfile: Dockerfile  # ← ファイル名を明示的に指定
        volumes:
          - type: bind
            source: ./api
            target: /go/src/app
        environment:
          - DB_HOST=db
          - DB_PASSWORD=${DB_PASSWORD}
          - DB_USER=${DB_USER}
          - DB_NAME=${DB_NAME}
          - LOGFILE=${LOGFILE}
        depends_on:
          - db
        ports:
          - "8080:8080"
    
    front:
        build:
          context: ./front
          dockerfile: Dockerfile  # ← ファイル名を明示的に指定
        volumes:
          - type: bind
            source: ./front
            target: /app
        environment:
          - API_URL=http://localhost:8080 # ← こバックエンドAPIの接続先URLをフロントエンドに渡す
          - CHOKIDAR_USEPOLLING=true  # ← DockerやMac環境でReactのホットリロードを安定させる
        ports:
          - "3000:3000" # Reactのデフォルトポート
        depends_on:
          - api

volumes:
    #services/db/volumesで作成したdb_parkinghubというボリュームをこのコンテナで使用すると宣言
    db_parkinghub:
            
            